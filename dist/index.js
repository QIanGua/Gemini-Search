import D from"dotenv";import P from"path";import{fileURLToPath as N}from"url";var W=N(import.meta.url),K=P.dirname(W),O=P.resolve(K,"../.env");function x(){let t=D.config({path:O});if(t.error)throw new Error(`Failed to load .env file from ${O}: ${t.error.message}`);if(!process.env.GOOGLE_API_KEY)throw new Error("GOOGLE_API_KEY environment variable must be set in .env file");return{GOOGLE_API_KEY:process.env.GOOGLE_API_KEY,NODE_ENV:process.env.NODE_ENV||"development"}}import ue from"path";import{fileURLToPath as ce}from"url";import C from"express";import{createServer as U}from"http";import{GoogleGenerativeAI as V}from"@google/generative-ai";import{marked as R}from"marked";var Y=x(),z=new V(Y.GOOGLE_API_KEY),J=z.getGenerativeModel({model:"gemini-2.0-flash-exp",generationConfig:{temperature:.9,topP:1,topK:1,maxOutputTokens:2048}}),I=new Map;async function M(t){let e=(await Promise.resolve(t)).replace(/\r\n/g,`
`);e=e.replace(/^([A-Za-z][A-Za-z\s]+):(\s*)/gm,"## $1$2"),e=e.replace(/(?<=\n|^)([A-Za-z][A-Za-z\s]+):(?!\d)/gm,"### $1"),e=e.replace(/^[•●○]\s*/gm,"* ");let r=e.split(`

`).filter(Boolean).map(s=>s.startsWith("#")||s.startsWith("*")||s.startsWith("-")?s:`${s}
`).join(`

`);return R.setOptions({gfm:!0,breaks:!0}),R.parse(r)}function $(t){return t.get("/api/search",async(e,n)=>{try{let r=e.query.q;if(!r)return n.status(400).json({message:"Query parameter 'q' is required"});let s=J.startChat({tools:[{google_search:{}}]}),i=await(await s.sendMessage(r)).response;console.log("Raw Google API Response:",JSON.stringify({text:i.text(),candidates:i.candidates,groundingMetadata:i.candidates?.[0]?.groundingMetadata},null,2));let a=i.text(),g=await M(a),f=new Map,p=i.candidates?.[0]?.groundingMetadata;if(p){let E=p.groundingChunks||[],b=p.groundingSupports||[];E.forEach((c,_)=>{if(c.web?.uri&&c.web?.title){let l=c.web.uri;if(!f.has(l)){let T=b.filter(d=>d.groundingChunkIndices.includes(_)).map(d=>d.segment.text).join(" ");f.set(l,{title:c.web.title,url:l,snippet:T||""})}}})}let h=Array.from(f.values()),y=Math.random().toString(36).substring(7);I.set(y,s),n.json({sessionId:y,summary:g,sources:h})}catch(r){console.error("Search error:",r),n.status(500).json({message:r.message||"An error occurred while processing your search"})}}),t.post("/api/follow-up",async(e,n)=>{try{let{sessionId:r,query:s}=e.body;if(!r||!s)return n.status(400).json({message:"Both sessionId and query are required"});let u=I.get(r);if(!u)return n.status(404).json({message:"Chat session not found"});let a=await(await u.sendMessage(s)).response;console.log("Raw Google API Follow-up Response:",JSON.stringify({text:a.text(),candidates:a.candidates,groundingMetadata:a.candidates?.[0]?.groundingMetadata},null,2));let g=a.text(),f=await M(g),p=new Map,h=a.candidates?.[0]?.groundingMetadata;if(h){let E=h.groundingChunks||[],b=h.groundingSupports||[];E.forEach((c,_)=>{if(c.web?.uri&&c.web?.title){let l=c.web.uri;if(!p.has(l)){let T=b.filter(d=>d.groundingChunkIndices.includes(_)).map(d=>d.segment.text).join(" ");p.set(l,{title:c.web.title,url:l,snippet:T||""})}}})}let y=Array.from(p.values());n.json({summary:f,sources:y})}catch(r){console.error("Follow-up error:",r),n.status(500).json({message:r.message||"An error occurred while processing your follow-up question"})}}),U(t)}import re from"express";import L from"fs";import G,{dirname as ne}from"path";import{fileURLToPath as se}from"url";import{createServer as oe,createLogger as ie}from"vite";import{defineConfig as Z}from"vite";import B from"@vitejs/plugin-react";import Q from"@replit/vite-plugin-shadcn-theme-json";import w,{dirname as H}from"path";import X from"@replit/vite-plugin-runtime-error-modal";import{fileURLToPath as ee}from"url";var te=ee(import.meta.url),S=H(te),A=Z({plugins:[B(),X(),Q()],resolve:{alias:{"@db":w.resolve(S,"db"),"@":w.resolve(S,"client","src")}},root:w.resolve(S,"client"),build:{outDir:w.resolve(S,"dist/public"),emptyOutDir:!0}});var ae=se(import.meta.url),q=ne(ae),j=ie();function v(t,o="express"){let e=new Date().toLocaleTimeString("en-US",{hour:"numeric",minute:"2-digit",second:"2-digit",hour12:!0});console.log(`${e} [${o}] ${t}`)}async function k(t,o){let e=await oe({...A,configFile:!1,customLogger:{...j,error:(n,r)=>{if(n.includes("[TypeScript] Found 0 errors. Watching for file changes")){v("no errors found","tsc");return}if(n.includes("[TypeScript] ")){let[s,u]=n.split("[TypeScript] ",2);v(`${u} ${s}\x1B[0m`,"tsc");return}else j.error(n,r),process.exit(1)}},server:{middlewareMode:!0,hmr:{server:o}},appType:"custom"});t.use(e.middlewares),t.use("*",async(n,r,s)=>{let u=n.originalUrl;try{let i=G.resolve(q,"..","client","index.html"),a=await L.promises.readFile(i,"utf-8"),g=await e.transformIndexHtml(u,a);r.status(200).set({"Content-Type":"text/html"}).end(g)}catch(i){e.ssrFixStacktrace(i),s(i)}})}function F(t){let o=G.resolve(q,"public");if(!L.existsSync(o))throw new Error(`Could not find the build directory: ${o}, make sure to build the client first`);t.use(re.static(o)),t.use("*",(e,n)=>{n.sendFile(G.resolve(o,"index.html"))})}var me=x();console.log(`
--- Environment Setup Debug ---`);console.log("Environment variables loaded:",me);console.log(`--- End Debug ---
`);var pe=ce(import.meta.url),Ke=ue.dirname(pe),m=C();m.use(C.json());m.use(C.urlencoded({extended:!1}));m.use((t,o,e)=>{let n=Date.now(),r=t.path,s,u=o.json;o.json=function(i,...a){return s=i,u.apply(o,[i,...a])},o.on("finish",()=>{let i=Date.now()-n;if(r.startsWith("/api")){let a=`${t.method} ${r} ${o.statusCode} in ${i}ms`;s&&(a+=` :: ${JSON.stringify(s)}`),a.length>80&&(a=a.slice(0,79)+"\u2026"),v(a)}}),e()});(async()=>{let t=$(m);m.use((e,n,r,s)=>{let u=e.status||e.statusCode||500,i=e.message||"Internal Server Error";throw r.status(u).json({message:i}),e}),m.get("env")==="development"?await k(m,t):F(m);let o=3e3;t.listen(o,"0.0.0.0",()=>{v(`serving on port ${o}`)})})();
//# sourceMappingURL=index.js.map
